openapi: 3.1.0
info:
  title: Train Travel API
  description: |
    API for finding and booking train trips across Europe.

    This API was created by [Bump.sh](https://bump.sh/) for the entire OpenAPI
    community, for educational and demonstrative purposes.
  contact:
    name: Train Support
    url: https://example.com/support
    email: support@example.com
  license:
    name: Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International
  version: 1.0.0
servers:
- url: https://train-travel-example.wiremockapi.cloud
- url: https://api.example.com
  description: Production
security:
- OAuth2:
  - read
tags:
- name: Stations
  description: |
    Find and filter train stations across Europe, including their location
    and local timezone.
- name: Trips
  description: |
    Timetables and routes for train trips between stations, including pricing
    and availability.
- name: Bookings
  description: |
    Create and manage bookings for train trips, including passenger details
    and optional extras.
- name: Payments
  description: "Pay for bookings using a card or bank account, and view payment\n\
    status and history.\n\n> warn\n> Bookings usually expire within 1 hour so you'll\
    \ need to make your payment\n> before the expiry date \n"
paths:
  /stations:
    get:
      tags:
      - Stations
      summary: Get a list of train stations
      description: Returns a list of all train stations in the system.
      operationId: get-stations
      parameters:
      - name: Accept
        in: header
        required: false
        style: simple
        explode: false
      responses:
        "200":
          description: Get a list of train stations
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items: {}
                    links: {}
                - properties:
                    data:
                      items:
                        required:
                        - address
                        - country_code
                        - id
                        - name
                        properties:
                          id:
                            format: uuid
                          name: {}
                          address: {}
                          country_code:
                            format: iso-country-code
                          timezone: {}
                - properties:
                    links:
                      allOf:
                      - properties:
                          self:
                            format: uri
                      - properties:
                          next:
                            format: uri
                          prev:
                            format: uri
              examples:
                Get a list of train stations:
                  value: "{\"data\":[{\"id\":\"efdbb9d1-02c2-4bc3-afb7-6788d8782b1e\"\
                    ,\"name\":\"Berlin Hauptbahnhof\",\"address\":\"Invalidenstra√ü\
                    e 10557 Berlin, Germany\",\"country_code\":\"DE\",\"timezone\"\
                    :\"Europe/Berlin\"},{\"id\":\"b2e783e1-c824-4d63-b37a-d8d698862f1d\"\
                    ,\"name\":\"Paris Gare du Nord\",\"address\":\"18 Rue de Dunkerque\
                    \ 75010 Paris, France\",\"country_code\":\"FR\",\"timezone\":\"\
                    Europe/Paris\"}],\"links\":{\"self\":\"https://api.example.com/stations&page=2\"\
                    ,\"next\":\"https://api.example.com/stations?page=3\",\"prev\"\
                    :\"https://api.example.com/stations?page=1\"}}"
            application/xml:
              schema:
                allOf:
                - properties:
                    data:
                      description: The wrapper for a collection is an array of objects.
                      items: {}
                    links:
                      description: A set of hypermedia links which serve as controls
                        for the client.
                      readOnly: true
                  description: This is a generic request/response wrapper which contains
                    both data and links which serve as hypermedia controls (HATEOAS).
                  xml:
                    name: data
                - properties:
                    data:
                      xml:
                        name: stations
                        wrapped: true
                      items:
                        required:
                        - address
                        - country_code
                        - id
                        - name
                        properties:
                          id:
                            description: Unique identifier for the station.
                            format: uuid
                          name:
                            description: The name of the station
                          address:
                            description: The address of the station.
                          country_code:
                            description: The country code of the station.
                            format: iso-country-code
                          timezone:
                            description: "The timezone of the station in the [IANA\
                              \ Time Zone Database format](https://www.iana.org/time-zones)."
                        xml:
                          name: station
                - properties:
                    links:
                      allOf:
                      - properties:
                          self:
                            format: uri
                      - properties:
                          next:
                            format: uri
                          prev:
                            format: uri
              examples:
                Get a list of train stations (application/xml):
                  value: |
                    <?xml version='1.1' encoding='UTF-8'?>
                    <response>
                      <data/>
                      <links/>
                    </response>
        "400":
          description: Bad Request
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
        "401":
          description: Unauthorized
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
        "403":
          description: Forbidden
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
        "429":
          description: Too Many Requests
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
            Retry-After:
              description: "The Retry-After header indicates how long the user agent\
                \ should wait before making a follow-up request. \nThe value is in\
                \ seconds and can be an integer or a date in the future. \nIf the\
                \ value is an integer, it indicates the number of seconds to wait.\
                \ \nIf the value is a date, it indicates the time at which the user\
                \ agent should make a follow-up request. \n"
              style: simple
              explode: false
              schema: {}
              examples:
                integer:
                  summary: Retry after 120 seconds
                  value: "120"
                date:
                  summary: Retry after the specified date
                  value: "Fri, 31 Dec 2021 23:59:59 GMT"
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
        "500":
          description: Internal Server Error
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
  /trips:
    get:
      tags:
      - Trips
      summary: Get available train trips
      description: "Returns a list of available train trips between the specified\
        \ origin and destination stations on the given date, and allows for filtering\
        \ by bicycle and dog allowances."
      operationId: get-trips
      parameters:
      - name: origin
        in: query
        description: The ID of the origin station
        required: true
        style: form
        explode: true
        schema:
          format: uuid
        example: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
      - name: destination
        in: query
        description: The ID of the destination station
        required: true
        style: form
        explode: true
        schema:
          format: uuid
        example: b2e783e1-c824-4d63-b37a-d8d698862f1d
      - name: date
        in: query
        description: The date and time of the trip in ISO 8601 format in origin station's
          timezone.
        required: true
        style: form
        explode: true
        schema:
          format: date-time
        example: 2024-02-01T09:00:00Z
      - name: bicycles
        in: query
        description: Only return trips where bicycles are known to be allowed
        required: false
        style: form
        explode: true
        schema:
          default: false
      - name: dogs
        in: query
        description: Only return trips where dogs are known to be allowed
        required: false
        style: form
        explode: true
        schema:
          default: false
      - name: Accept
        in: header
        required: false
        style: simple
        explode: false
      responses:
        "200":
          description: Get available train trips - generic
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items: {}
                    links: {}
                - properties:
                    data:
                      items:
                        properties:
                          id:
                            format: uuid
                          origin: {}
                          destination: {}
                          departure_time:
                            format: date-time
                          arrival_time:
                            format: date-time
                          operator: {}
                          price: {}
                          bicycles_allowed: {}
                          dogs_allowed: {}
                - properties:
                    links:
                      allOf:
                      - properties:
                          self:
                            format: uri
                      - properties:
                          next:
                            format: uri
                          prev:
                            format: uri
              examples:
                Get available train trips:
                  value: "{\"data\":[{\"id\":\"ea399ba1-6d95-433f-92d1-83f67b775594\"\
                    ,\"origin\":\"efdbb9d1-02c2-4bc3-afb7-6788d8782b1e\",\"destination\"\
                    :\"b2e783e1-c824-4d63-b37a-d8d698862f1d\",\"departure_time\":\"\
                    2024-02-01T10:00:00Z\",\"arrival_time\":\"2024-02-01T16:00:00Z\"\
                    ,\"price\":50,\"operator\":\"Deutsche Bahn\",\"bicycles_allowed\"\
                    :true,\"dogs_allowed\":true},{\"id\":\"4d67459c-af07-40bb-bb12-178dbb88e09f\"\
                    ,\"origin\":\"b2e783e1-c824-4d63-b37a-d8d698862f1d\",\"destination\"\
                    :\"efdbb9d1-02c2-4bc3-afb7-6788d8782b1e\",\"departure_time\":\"\
                    2024-02-01T12:00:00Z\",\"arrival_time\":\"2024-02-01T18:00:00Z\"\
                    ,\"price\":50,\"operator\":\"SNCF\",\"bicycles_allowed\":true,\"\
                    dogs_allowed\":true}],\"links\":{\"self\":\"https://api.example.com/trips?origin=efdbb9d1-02c2-4bc3-afb7-6788d8782b1e&destination=b2e783e1-c824-4d63-b37a-d8d698862f1d&date=2024-02-01\"\
                    ,\"next\":\"https://api.example.com/trips?origin=efdbb9d1-02c2-4bc3-afb7-6788d8782b1e&destination=b2e783e1-c824-4d63-b37a-d8d698862f1d&date=2024-02-01&page=2\"\
                    }}"
            application/xml:
              schema:
                allOf:
                - properties:
                    data:
                      description: The wrapper for a collection is an array of objects.
                      items: {}
                    links:
                      description: A set of hypermedia links which serve as controls
                        for the client.
                      readOnly: true
                  description: This is a generic request/response wrapper which contains
                    both data and links which serve as hypermedia controls (HATEOAS).
                  xml:
                    name: data
                - properties:
                    data:
                      xml:
                        name: trips
                        wrapped: true
                      items:
                        properties:
                          id:
                            description: Unique identifier for the trip
                            format: uuid
                          origin:
                            description: The starting station of the trip
                          destination:
                            description: The destination station of the trip
                          departure_time:
                            description: The date and time when the trip departs
                            format: date-time
                          arrival_time:
                            description: The date and time when the trip arrives
                            format: date-time
                          operator:
                            description: The name of the operator of the trip
                          price:
                            description: The cost of the trip
                          bicycles_allowed:
                            description: Indicates whether bicycles are allowed on
                              the trip
                          dogs_allowed:
                            description: Indicates whether dogs are allowed on the
                              trip
                        xml:
                          name: trip
                - properties:
                    links:
                      allOf:
                      - properties:
                          self:
                            format: uri
                      - properties:
                          next:
                            format: uri
                          prev:
                            format: uri
        "400":
          description: Bad Request
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
        "401":
          description: Unauthorized
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
        "403":
          description: Forbidden
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
        "429":
          description: Too Many Requests
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
            Retry-After:
              description: "The Retry-After header indicates how long the user agent\
                \ should wait before making a follow-up request. \nThe value is in\
                \ seconds and can be an integer or a date in the future. \nIf the\
                \ value is an integer, it indicates the number of seconds to wait.\
                \ \nIf the value is a date, it indicates the time at which the user\
                \ agent should make a follow-up request. \n"
              style: simple
              explode: false
              schema: {}
              examples:
                integer:
                  summary: Retry after 120 seconds
                  value: "120"
                date:
                  summary: Retry after the specified date
                  value: "Fri, 31 Dec 2021 23:59:59 GMT"
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
        "500":
          description: Internal Server Error
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
  /bookings:
    get:
      tags:
      - Bookings
      summary: List existing bookings
      description: Returns a list of all trip bookings by the authenticated user.
      operationId: get-bookings
      parameters:
      - name: Accept
        in: header
        required: false
        style: simple
        explode: false
      responses:
        "200":
          description: List existing bookings
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items: {}
                    links: {}
                - properties:
                    data:
                      items:
                        properties:
                          id:
                            format: uuid
                          trip_id:
                            format: uuid
                          passenger_name: {}
                          has_bicycle: {}
                          has_dog: {}
                - properties:
                    links:
                      allOf:
                      - properties:
                          self:
                            format: uri
                      - properties:
                          next:
                            format: uri
                          prev:
                            format: uri
              examples:
                List existing bookings:
                  value: "{\"data\":[{\"id\":\"efdbb9d1-02c2-4bc3-afb7-6788d8782b1e\"\
                    ,\"trip_id\":\"efdbb9d1-02c2-4bc3-afb7-6788d8782b1e\",\"passenger_name\"\
                    :\"John Doe\",\"has_bicycle\":true,\"has_dog\":true},{\"id\":\"\
                    b2e783e1-c824-4d63-b37a-d8d698862f1d\",\"trip_id\":\"b2e783e1-c824-4d63-b37a-d8d698862f1d\"\
                    ,\"passenger_name\":\"Jane Smith\",\"has_bicycle\":false,\"has_dog\"\
                    :false}],\"links\":{\"self\":\"https://api.example.com/bookings\"\
                    ,\"next\":\"https://api.example.com/bookings?page=2\"}}"
            application/xml:
              schema:
                allOf:
                - properties:
                    data:
                      description: The wrapper for a collection is an array of objects.
                      items: {}
                    links:
                      description: A set of hypermedia links which serve as controls
                        for the client.
                      readOnly: true
                  description: This is a generic request/response wrapper which contains
                    both data and links which serve as hypermedia controls (HATEOAS).
                  xml:
                    name: data
                - properties:
                    data:
                      xml:
                        name: bookings
                        wrapped: true
                      items:
                        properties:
                          id:
                            description: Unique identifier for the booking
                            format: uuid
                            readOnly: true
                          trip_id:
                            description: Identifier of the booked trip
                            format: uuid
                          passenger_name:
                            description: Name of the passenger
                          has_bicycle:
                            description: Indicates whether the passenger has a bicycle.
                          has_dog:
                            description: Indicates whether the passenger has a dog.
                        xml:
                          name: booking
                - properties:
                    links:
                      allOf:
                      - properties:
                          self:
                            format: uri
                      - properties:
                          next:
                            format: uri
                          prev:
                            format: uri
              examples:
                List existing bookings (application/xml):
                  value: |
                    <?xml version='1.1' encoding='UTF-8'?>
                    <response>
                      <data/>
                      <links/>
                    </response>
        "400":
          description: List existing bookings (application/problem+json)
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    example: https://example.com/probs/out-of-credit
                  title:
                    example: You do not have enough credit.
                  detail:
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    example: /account/12345/msgs/abc
                  status:
                    example: 400
              examples:
                List existing bookings (application/problem+json):
                  value: |-
                    {
                      "type" : "https://example.com/errors/bad-request",
                      "title" : "Bad Request",
                      "status" : 400,
                      "detail" : "The request is invalid or missing required parameters."
                    }
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              examples:
                List existing bookings (application/problem+xml):
                  value: |
                    <?xml version='1.1' encoding='UTF-8'?>
                    <problem>
                      <type>https://example.com/errors/bad-request</type>
                      <title>Bad Request</title>
                      <status>400</status>
                      <detail>The request is invalid or missing required parameters.</detail>
                    </problem>
        "401":
          description: Unauthorized
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
        "403":
          description: Forbidden
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
        "429":
          description: Too Many Requests
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
            Retry-After:
              description: "The Retry-After header indicates how long the user agent\
                \ should wait before making a follow-up request. \nThe value is in\
                \ seconds and can be an integer or a date in the future. \nIf the\
                \ value is an integer, it indicates the number of seconds to wait.\
                \ \nIf the value is a date, it indicates the time at which the user\
                \ agent should make a follow-up request. \n"
              style: simple
              explode: false
              schema: {}
              examples:
                integer:
                  summary: Retry after 120 seconds
                  value: "120"
                date:
                  summary: Retry after the specified date
                  value: "Fri, 31 Dec 2021 23:59:59 GMT"
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
        "500":
          description: Internal Server Error
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
    post:
      tags:
      - Bookings
      summary: Create a booking
      description: A booking is a temporary hold on a trip. It is not confirmed until
        the payment is processed.
      operationId: create-booking
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: Unique identifier for the booking
                  format: uuid
                  readOnly: true
                trip_id:
                  description: Identifier of the booked trip
                  format: uuid
                passenger_name:
                  description: Name of the passenger
                has_bicycle:
                  description: Indicates whether the passenger has a bicycle.
                has_dog:
                  description: Indicates whether the passenger has a dog.
              xml:
                name: booking
          application/xml:
            schema:
              properties:
                id:
                  description: Unique identifier for the booking
                  format: uuid
                  readOnly: true
                trip_id:
                  description: Identifier of the booked trip
                  format: uuid
                passenger_name:
                  description: Name of the passenger
                has_bicycle:
                  description: Indicates whether the passenger has a bicycle.
                has_dog:
                  description: Indicates whether the passenger has a dog.
              xml:
                name: booking
        required: true
      responses:
        "201":
          description: Booking successful
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    id:
                      description: Unique identifier for the booking
                      format: uuid
                      readOnly: true
                    trip_id:
                      description: Identifier of the booked trip
                      format: uuid
                    passenger_name:
                      description: Name of the passenger
                    has_bicycle:
                      description: Indicates whether the passenger has a bicycle.
                    has_dog:
                      description: Indicates whether the passenger has a dog.
                  xml:
                    name: booking
                - properties:
                    links:
                      properties:
                        self:
                          format: uri
              example:
                id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                passenger_name: John Doe
                has_bicycle: true
                has_dog: true
                links:
                  self: https://api.example.com/bookings/efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
            application/xml:
              schema:
                allOf:
                - properties:
                    id:
                      description: Unique identifier for the booking
                      format: uuid
                      readOnly: true
                    trip_id:
                      description: Identifier of the booked trip
                      format: uuid
                    passenger_name:
                      description: Name of the passenger
                    has_bicycle:
                      description: Indicates whether the passenger has a bicycle.
                    has_dog:
                      description: Indicates whether the passenger has a dog.
                  xml:
                    name: booking
                - properties:
                    links:
                      properties:
                        self:
                          format: uri
        "400":
          description: Bad Request
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
        "401":
          description: Unauthorized
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
        "404":
          description: Not Found
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/not-found
                title: Not Found
                status: 404
                detail: The requested resource was not found.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/not-found
                title: Not Found
                status: 404
                detail: The requested resource was not found.
        "409":
          description: Conflict
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/conflict
                title: Conflict
                status: 409
                detail: There is a conflict with an existing resource.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/conflict
                title: Conflict
                status: 409
                detail: There is a conflict with an existing resource.
        "429":
          description: Too Many Requests
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
            Retry-After:
              description: "The Retry-After header indicates how long the user agent\
                \ should wait before making a follow-up request. \nThe value is in\
                \ seconds and can be an integer or a date in the future. \nIf the\
                \ value is an integer, it indicates the number of seconds to wait.\
                \ \nIf the value is a date, it indicates the time at which the user\
                \ agent should make a follow-up request. \n"
              style: simple
              explode: false
              schema: {}
              examples:
                integer:
                  summary: Retry after 120 seconds
                  value: "120"
                date:
                  summary: Retry after the specified date
                  value: "Fri, 31 Dec 2021 23:59:59 GMT"
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
        "500":
          description: Internal Server Error
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
      security:
      - OAuth2:
        - write
  /bookings/{bookingId}:
    get:
      tags:
      - Bookings
      summary: Get a booking
      description: Returns the details of a specific booking.
      operationId: get-booking
      responses:
        "200":
          description: The booking details
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    id:
                      description: Unique identifier for the booking
                      format: uuid
                      readOnly: true
                    trip_id:
                      description: Identifier of the booked trip
                      format: uuid
                    passenger_name:
                      description: Name of the passenger
                    has_bicycle:
                      description: Indicates whether the passenger has a bicycle.
                    has_dog:
                      description: Indicates whether the passenger has a dog.
                  xml:
                    name: booking
                - properties:
                    links:
                      properties:
                        self:
                          format: uri
              example:
                id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                passenger_name: John Doe
                has_bicycle: true
                has_dog: true
                links:
                  self: https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
            application/xml:
              schema:
                allOf:
                - properties:
                    id:
                      description: Unique identifier for the booking
                      format: uuid
                      readOnly: true
                    trip_id:
                      description: Identifier of the booked trip
                      format: uuid
                    passenger_name:
                      description: Name of the passenger
                    has_bicycle:
                      description: Indicates whether the passenger has a bicycle.
                    has_dog:
                      description: Indicates whether the passenger has a dog.
                  xml:
                    name: booking
                - properties:
                    links:
                      properties:
                        self:
                          format: uri
        "400":
          description: Bad Request
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
        "401":
          description: Unauthorized
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
        "403":
          description: Forbidden
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
        "404":
          description: Not Found
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/not-found
                title: Not Found
                status: 404
                detail: The requested resource was not found.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/not-found
                title: Not Found
                status: 404
                detail: The requested resource was not found.
        "429":
          description: Too Many Requests
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
            Retry-After:
              description: "The Retry-After header indicates how long the user agent\
                \ should wait before making a follow-up request. \nThe value is in\
                \ seconds and can be an integer or a date in the future. \nIf the\
                \ value is an integer, it indicates the number of seconds to wait.\
                \ \nIf the value is a date, it indicates the time at which the user\
                \ agent should make a follow-up request. \n"
              style: simple
              explode: false
              schema: {}
              examples:
                integer:
                  summary: Retry after 120 seconds
                  value: "120"
                date:
                  summary: Retry after the specified date
                  value: "Fri, 31 Dec 2021 23:59:59 GMT"
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
        "500":
          description: Internal Server Error
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
    delete:
      tags:
      - Bookings
      summary: Delete a booking
      description: "Deletes a booking, cancelling the hold on the trip."
      operationId: delete-booking
      responses:
        "204":
          description: Booking deleted
        "400":
          description: Bad Request
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
        "401":
          description: Unauthorized
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
        "403":
          description: Forbidden
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
        "404":
          description: Not Found
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/not-found
                title: Not Found
                status: 404
                detail: The requested resource was not found.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/not-found
                title: Not Found
                status: 404
                detail: The requested resource was not found.
        "429":
          description: Too Many Requests
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
            Retry-After:
              description: "The Retry-After header indicates how long the user agent\
                \ should wait before making a follow-up request. \nThe value is in\
                \ seconds and can be an integer or a date in the future. \nIf the\
                \ value is an integer, it indicates the number of seconds to wait.\
                \ \nIf the value is a date, it indicates the time at which the user\
                \ agent should make a follow-up request. \n"
              style: simple
              explode: false
              schema: {}
              examples:
                integer:
                  summary: Retry after 120 seconds
                  value: "120"
                date:
                  summary: Retry after the specified date
                  value: "Fri, 31 Dec 2021 23:59:59 GMT"
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
        "500":
          description: Internal Server Error
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
      security:
      - OAuth2:
        - write
    parameters:
    - name: bookingId
      in: path
      description: The ID of the booking to retrieve.
      required: true
      style: simple
      explode: false
      schema:
        format: uuid
      example: 1725ff48-ab45-4bb5-9d02-88745177dedb
  /bookings/{bookingId}/payment:
    post:
      tags:
      - Payments
      summary: Pay for a Booking
      description: "A payment is an attempt to pay for the booking, which will confirm\
        \ the booking for the user and enable them to get their tickets."
      operationId: create-booking-payment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: "Unique identifier for the payment. This will be a\
                    \ unique identifier for the payment, and is used to reference\
                    \ the payment in other objects."
                  format: uuid
                  readOnly: true
                amount:
                  description: Amount intended to be collected by this payment. A
                    positive decimal figure describing the amount to be collected.
                currency:
                  description: "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\
                    \ in lowercase."
                  enum:
                  - bam
                  - bgn
                  - chf
                  - eur
                  - gbp
                  - nok
                  - sek
                  - try
                source:
                  description: The payment source to take the payment from. This can
                    be a card or a bank account. Some of these properties will be
                    hidden on read to protect PII leaking.
                  anyOf:
                  - title: Card
                    required:
                    - address_country
                    - cvc
                    - exp_month
                    - exp_year
                    - name
                    - number
                    properties:
                      object: {}
                      name:
                        description: Cardholder's full name as it appears on the card.
                      number:
                        description: "The card number, as a string without any separators.\
                          \ On read all but the last four digits will be masked for\
                          \ security."
                      cvc:
                        maxLength: 4
                        minLength: 3
                        description: "Card security code, 3 or 4 digits usually found\
                          \ on the back of the card."
                        writeOnly: true
                        example: 123
                      exp_month:
                        description: Two-digit number representing the card's expiration
                          month.
                        format: int64
                      exp_year:
                        description: Four-digit number representing the card's expiration
                          year.
                        format: int64
                      address_line1:
                        writeOnly: true
                      address_line2:
                        writeOnly: true
                      address_city: {}
                      address_country: {}
                      address_post_code: {}
                    description: A card (debit or credit) to take payment from.
                  - title: Bank Account
                    required:
                    - account_type
                    - bank_name
                    - country
                    - name
                    - number
                    properties:
                      object: {}
                      name: {}
                      number:
                        description: "The account number for the bank account, in\
                          \ string form. Must be a current account."
                      sort_code:
                        description: "The sort code for the bank account, in string\
                          \ form. Must be a six-digit number."
                      account_type:
                        description: The type of entity that holds the account. This
                          can be either `individual` or `company`.
                        enum:
                        - individual
                        - company
                      bank_name:
                        description: The name of the bank associated with the routing
                          number.
                      country:
                        description: Two-letter country code (ISO 3166-1 alpha-2).
                    description: A bank account to take payment from. Must be able
                      to make payments in the currency specified in the payment.
                status:
                  description: "The status of the payment, one of `pending`, `succeeded`,\
                    \ or `failed`."
                  readOnly: true
                  enum:
                  - pending
                  - succeeded
                  - failed
            examples:
              Card:
                summary: Card Payment
                value:
                  amount: 49.99
                  currency: gbp
                  source:
                    object: card
                    name: J. Doe
                    number: "4242424242424242"
                    cvc: 123
                    exp_month: 12
                    exp_year: 2025
                    address_line1: 123 Fake Street
                    address_line2: 4th Floor
                    address_city: London
                    address_country: gb
                    address_post_code: N12 9XX
              Bank:
                summary: Bank Account Payment
                value:
                  amount: 100.5
                  currency: gbp
                  source:
                    object: bank_account
                    name: J. Doe
                    number: "00012345"
                    sort_code: "000123"
                    account_type: individual
                    bank_name: Starling Bank
                    country: gb
      responses:
        "200":
          description: Pay for a Booking - generic
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/json:
              schema:
                type: object
                allOf:
                - type: object
                  properties:
                    id:
                      type: object
                      format: uuid
                    amount:
                      type: object
                    currency:
                      type: string
                      enum:
                      - bam
                      - bgn
                      - chf
                      - eur
                      - gbp
                      - nok
                      - sek
                      - try
                    source:
                      type: object
                      anyOf:
                      - required:
                        - address_country
                        - cvc
                        - exp_month
                        - exp_year
                        - name
                        - number
                        type: object
                        properties:
                          object:
                            type: object
                          name:
                            type: object
                          number:
                            type: object
                          cvc:
                            minLength: 3
                            type: object
                            example: 123
                          exp_month:
                            type: object
                            format: int64
                          exp_year:
                            type: object
                            format: int64
                          address_line1:
                            type: object
                          address_line2:
                            type: object
                          address_city:
                            type: object
                          address_country:
                            type: object
                          address_post_code:
                            type: object
                      - required:
                        - account_type
                        - bank_name
                        - country
                        - name
                        - number
                        type: object
                        properties:
                          object:
                            type: object
                          name:
                            type: object
                          number:
                            type: object
                          sort_code:
                            type: object
                          account_type:
                            type: string
                            enum:
                            - individual
                            - company
                          bank_name:
                            type: object
                          country:
                            type: object
                    status:
                      type: string
                      enum:
                      - pending
                      - succeeded
                      - failed
                - type: object
                  properties:
                    links:
                      type: object
                      properties:
                        booking:
                          type: object
                          format: uri
              examples:
                Card:
                  summary: Card Payment
                  value:
                    id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
                    amount: 49.99
                    currency: gbp
                    source:
                      object: card
                      name: J. Doe
                      number: '************4242'
                      cvc: 123
                      exp_month: 12
                      exp_year: 2025
                      address_country: gb
                      address_post_code: N12 9XX
                    status: succeeded
                    links:
                      booking: https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
                Bank:
                  summary: Bank Account Payment
                  value:
                    id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
                    amount: 100.5
                    currency: gbp
                    source:
                      object: bank_account
                      name: J. Doe
                      account_type: individual
                      number: '*********2345'
                      sort_code: "000123"
                      bank_name: Starling Bank
                      country: gb
                    status: succeeded
                    links:
                      booking: https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
                "1":
                  value: "{\"id\":\"2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a\",\"amount\"\
                    :49.99,\"currency\":\"gbp\",\"source\":{\"object\":\"card\",\"\
                    name\":\"J. Doe\",\"number\":\"************4242\",\"cvc\":123,\"\
                    exp_month\":12,\"exp_year\":2025,\"address_country\":\"gb\",\"\
                    address_post_code\":\"N12 9XX\"},\"status\":\"succeeded\",\"links\"\
                    :{\"booking\":\"https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment\"\
                    }}"
        "400":
          description: Bad Request
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/bad-request
                title: Bad Request
                status: 400
                detail: The request is invalid or missing required parameters.
        "401":
          description: Unauthorized
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/unauthorized
                title: Unauthorized
                status: 401
                detail: You do not have the necessary permissions.
        "403":
          description: Forbidden
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/forbidden
                title: Forbidden
                status: 403
                detail: Access is forbidden with the provided credentials.
        "429":
          description: Too Many Requests
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
            Retry-After:
              description: "The Retry-After header indicates how long the user agent\
                \ should wait before making a follow-up request. \nThe value is in\
                \ seconds and can be an integer or a date in the future. \nIf the\
                \ value is an integer, it indicates the number of seconds to wait.\
                \ \nIf the value is a date, it indicates the time at which the user\
                \ agent should make a follow-up request. \n"
              style: simple
              explode: false
              schema: {}
              examples:
                integer:
                  summary: Retry after 120 seconds
                  value: "120"
                date:
                  summary: Retry after the specified date
                  value: "Fri, 31 Dec 2021 23:59:59 GMT"
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/too-many-requests
                title: Too Many Requests
                status: 429
                detail: You have exceeded the rate limit.
        "500":
          description: Internal Server Error
          headers:
            RateLimit:
              description: |
                The RateLimit header communicates quota policies. It contains a `limit` to
                convey the expiring limit, `remaining` to convey the remaining quota units,
                and `reset` to convey the time window reset time.
              style: simple
              explode: false
              schema: {}
          content:
            application/problem+json:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
            application/problem+xml:
              schema:
                properties:
                  type:
                    description: A URI reference that identifies the problem type
                    example: https://example.com/probs/out-of-credit
                  title:
                    description: "A short, human-readable summary of the problem type"
                    example: You do not have enough credit.
                  detail:
                    description: A human-readable explanation specific to this occurrence
                      of the problem
                    example: "Your current balance is 30, but that costs 50."
                  instance:
                    description: A URI reference that identifies the specific occurrence
                      of the problem
                    example: /account/12345/msgs/abc
                  status:
                    description: The HTTP status code
                    example: 400
                xml:
                  name: problem
                  namespace: urn:ietf:rfc:7807
              example:
                type: https://example.com/errors/internal-server-error
                title: Internal Server Error
                status: 500
                detail: An unexpected error occurred.
    parameters:
    - name: bookingId
      in: path
      description: The ID of the booking to pay for.
      required: true
      style: simple
      explode: false
      schema:
        format: uuid
      example: 1725ff48-ab45-4bb5-9d02-88745177dedb
components:
  schemas:
    Station:
      required:
      - address
      - country_code
      - id
      - name
      properties:
        id:
          description: Unique identifier for the station.
          format: uuid
        name:
          description: The name of the station
        address:
          description: The address of the station.
        country_code:
          description: The country code of the station.
          format: iso-country-code
        timezone:
          description: "The timezone of the station in the [IANA Time Zone Database\
            \ format](https://www.iana.org/time-zones)."
      xml:
        name: station
    Links-Self:
      properties:
        self:
          format: uri
    Links-Pagination:
      properties:
        next:
          format: uri
        prev:
          format: uri
    Problem:
      properties:
        type:
          description: A URI reference that identifies the problem type
          example: https://example.com/probs/out-of-credit
        title:
          description: "A short, human-readable summary of the problem type"
          example: You do not have enough credit.
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          example: "Your current balance is 30, but that costs 50."
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem
          example: /account/12345/msgs/abc
        status:
          description: The HTTP status code
          example: 400
      xml:
        name: problem
        namespace: urn:ietf:rfc:7807
    Trip:
      properties:
        id:
          description: Unique identifier for the trip
          format: uuid
        origin:
          description: The starting station of the trip
        destination:
          description: The destination station of the trip
        departure_time:
          description: The date and time when the trip departs
          format: date-time
        arrival_time:
          description: The date and time when the trip arrives
          format: date-time
        operator:
          description: The name of the operator of the trip
        price:
          description: The cost of the trip
        bicycles_allowed:
          description: Indicates whether bicycles are allowed on the trip
        dogs_allowed:
          description: Indicates whether dogs are allowed on the trip
      xml:
        name: trip
    Booking:
      properties:
        id:
          description: Unique identifier for the booking
          format: uuid
          readOnly: true
        trip_id:
          description: Identifier of the booked trip
          format: uuid
        passenger_name:
          description: Name of the passenger
        has_bicycle:
          description: Indicates whether the passenger has a bicycle.
        has_dog:
          description: Indicates whether the passenger has a dog.
      xml:
        name: booking
    Wrapper-Collection:
      properties:
        data:
          description: The wrapper for a collection is an array of objects.
          items: {}
        links:
          description: A set of hypermedia links which serve as controls for the client.
          readOnly: true
      description: This is a generic request/response wrapper which contains both
        data and links which serve as hypermedia controls (HATEOAS).
      xml:
        name: data
    BookingPayment:
      properties:
        id:
          description: "Unique identifier for the payment. This will be a unique identifier\
            \ for the payment, and is used to reference the payment in other objects."
          format: uuid
          readOnly: true
        amount:
          description: Amount intended to be collected by this payment. A positive
            decimal figure describing the amount to be collected.
        currency:
          description: "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),\
            \ in lowercase."
          enum:
          - bam
          - bgn
          - chf
          - eur
          - gbp
          - nok
          - sek
          - try
        source:
          description: The payment source to take the payment from. This can be a
            card or a bank account. Some of these properties will be hidden on read
            to protect PII leaking.
          anyOf:
          - title: Card
            required:
            - address_country
            - cvc
            - exp_month
            - exp_year
            - name
            - number
            properties:
              object: {}
              name:
                description: Cardholder's full name as it appears on the card.
              number:
                description: "The card number, as a string without any separators.\
                  \ On read all but the last four digits will be masked for security."
              cvc:
                maxLength: 4
                minLength: 3
                description: "Card security code, 3 or 4 digits usually found on the\
                  \ back of the card."
                writeOnly: true
                example: 123
              exp_month:
                description: Two-digit number representing the card's expiration month.
                format: int64
              exp_year:
                description: Four-digit number representing the card's expiration
                  year.
                format: int64
              address_line1:
                writeOnly: true
              address_line2:
                writeOnly: true
              address_city: {}
              address_country: {}
              address_post_code: {}
            description: A card (debit or credit) to take payment from.
          - title: Bank Account
            required:
            - account_type
            - bank_name
            - country
            - name
            - number
            properties:
              object: {}
              name: {}
              number:
                description: "The account number for the bank account, in string form.\
                  \ Must be a current account."
              sort_code:
                description: "The sort code for the bank account, in string form.\
                  \ Must be a six-digit number."
              account_type:
                description: The type of entity that holds the account. This can be
                  either `individual` or `company`.
                enum:
                - individual
                - company
              bank_name:
                description: The name of the bank associated with the routing number.
              country:
                description: Two-letter country code (ISO 3166-1 alpha-2).
            description: A bank account to take payment from. Must be able to make
              payments in the currency specified in the payment.
        status:
          description: "The status of the payment, one of `pending`, `succeeded`,\
            \ or `failed`."
          readOnly: true
          enum:
          - pending
          - succeeded
          - failed
    Links-Booking:
      properties:
        booking:
          format: uri
  responses:
    BadRequest:
      description: Bad Request
      headers:
        RateLimit:
          description: |
            The RateLimit header communicates quota policies. It contains a `limit` to
            convey the expiring limit, `remaining` to convey the remaining quota units,
            and `reset` to convey the time window reset time.
          style: simple
          explode: false
          schema: {}
      content:
        application/problem+json:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/bad-request
            title: Bad Request
            status: 400
            detail: The request is invalid or missing required parameters.
        application/problem+xml:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/bad-request
            title: Bad Request
            status: 400
            detail: The request is invalid or missing required parameters.
    Conflict:
      description: Conflict
      headers:
        RateLimit:
          description: |
            The RateLimit header communicates quota policies. It contains a `limit` to
            convey the expiring limit, `remaining` to convey the remaining quota units,
            and `reset` to convey the time window reset time.
          style: simple
          explode: false
          schema: {}
      content:
        application/problem+json:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/conflict
            title: Conflict
            status: 409
            detail: There is a conflict with an existing resource.
        application/problem+xml:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/conflict
            title: Conflict
            status: 409
            detail: There is a conflict with an existing resource.
    Forbidden:
      description: Forbidden
      headers:
        RateLimit:
          description: |
            The RateLimit header communicates quota policies. It contains a `limit` to
            convey the expiring limit, `remaining` to convey the remaining quota units,
            and `reset` to convey the time window reset time.
          style: simple
          explode: false
          schema: {}
      content:
        application/problem+json:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/forbidden
            title: Forbidden
            status: 403
            detail: Access is forbidden with the provided credentials.
        application/problem+xml:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/forbidden
            title: Forbidden
            status: 403
            detail: Access is forbidden with the provided credentials.
    InternalServerError:
      description: Internal Server Error
      headers:
        RateLimit:
          description: |
            The RateLimit header communicates quota policies. It contains a `limit` to
            convey the expiring limit, `remaining` to convey the remaining quota units,
            and `reset` to convey the time window reset time.
          style: simple
          explode: false
          schema: {}
      content:
        application/problem+json:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/internal-server-error
            title: Internal Server Error
            status: 500
            detail: An unexpected error occurred.
        application/problem+xml:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/internal-server-error
            title: Internal Server Error
            status: 500
            detail: An unexpected error occurred.
    NotFound:
      description: Not Found
      headers:
        RateLimit:
          description: |
            The RateLimit header communicates quota policies. It contains a `limit` to
            convey the expiring limit, `remaining` to convey the remaining quota units,
            and `reset` to convey the time window reset time.
          style: simple
          explode: false
          schema: {}
      content:
        application/problem+json:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/not-found
            title: Not Found
            status: 404
            detail: The requested resource was not found.
        application/problem+xml:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/not-found
            title: Not Found
            status: 404
            detail: The requested resource was not found.
    TooManyRequests:
      description: Too Many Requests
      headers:
        RateLimit:
          description: |
            The RateLimit header communicates quota policies. It contains a `limit` to
            convey the expiring limit, `remaining` to convey the remaining quota units,
            and `reset` to convey the time window reset time.
          style: simple
          explode: false
          schema: {}
        Retry-After:
          description: "The Retry-After header indicates how long the user agent should\
            \ wait before making a follow-up request. \nThe value is in seconds and\
            \ can be an integer or a date in the future. \nIf the value is an integer,\
            \ it indicates the number of seconds to wait. \nIf the value is a date,\
            \ it indicates the time at which the user agent should make a follow-up\
            \ request. \n"
          style: simple
          explode: false
          schema: {}
          examples:
            integer:
              summary: Retry after 120 seconds
              value: "120"
            date:
              summary: Retry after the specified date
              value: "Fri, 31 Dec 2021 23:59:59 GMT"
      content:
        application/problem+json:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/too-many-requests
            title: Too Many Requests
            status: 429
            detail: You have exceeded the rate limit.
        application/problem+xml:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/too-many-requests
            title: Too Many Requests
            status: 429
            detail: You have exceeded the rate limit.
    Unauthorized:
      description: Unauthorized
      headers:
        RateLimit:
          description: |
            The RateLimit header communicates quota policies. It contains a `limit` to
            convey the expiring limit, `remaining` to convey the remaining quota units,
            and `reset` to convey the time window reset time.
          style: simple
          explode: false
          schema: {}
      content:
        application/problem+json:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/unauthorized
            title: Unauthorized
            status: 401
            detail: You do not have the necessary permissions.
        application/problem+xml:
          schema:
            properties:
              type:
                description: A URI reference that identifies the problem type
                example: https://example.com/probs/out-of-credit
              title:
                description: "A short, human-readable summary of the problem type"
                example: You do not have enough credit.
              detail:
                description: A human-readable explanation specific to this occurrence
                  of the problem
                example: "Your current balance is 30, but that costs 50."
              instance:
                description: A URI reference that identifies the specific occurrence
                  of the problem
                example: /account/12345/msgs/abc
              status:
                description: The HTTP status code
                example: 400
            xml:
              name: problem
              namespace: urn:ietf:rfc:7807
          example:
            type: https://example.com/errors/unauthorized
            title: Unauthorized
            status: 401
            detail: You do not have the necessary permissions.
  headers:
    RateLimit:
      description: |
        The RateLimit header communicates quota policies. It contains a `limit` to
        convey the expiring limit, `remaining` to convey the remaining quota units,
        and `reset` to convey the time window reset time.
      style: simple
      explode: false
      schema: {}
    Retry-After:
      description: "The Retry-After header indicates how long the user agent should\
        \ wait before making a follow-up request. \nThe value is in seconds and can\
        \ be an integer or a date in the future. \nIf the value is an integer, it\
        \ indicates the number of seconds to wait. \nIf the value is a date, it indicates\
        \ the time at which the user agent should make a follow-up request. \n"
      style: simple
      explode: false
      schema: {}
      examples:
        integer:
          summary: Retry after 120 seconds
          value: "120"
        date:
          summary: Retry after the specified date
          value: "Fri, 31 Dec 2021 23:59:59 GMT"
  securitySchemes:
    OAuth2:
      type: oauth2
      description: OAuth 2.0 authorization code following RFC8725 best practices.
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Read access
            write: Write access
x-topics:
- title: Getting started
  content:
    $ref: ./docs/getting-started.md
